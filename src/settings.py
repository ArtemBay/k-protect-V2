import disnake
from disnake.ext import commands

import cache
import messages
import word
from config import Color
from profilactic import measures


class Settings(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(aliases=['mr'])
    @commands.cooldown(1, 10, commands.BucketType.guild)
    @commands.check(messages.check_perms)
    async def muterole(self, ctx, role: disnake.Role = None):
        measures.add(what=10)
        if role is None:
            try:
                mr = ctx.guild.get_role(cache.configs_data[ctx.guild.id]['muterole']).mention
            except:
                mr = '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
            embed = disnake.Embed(color=Color.primary)
            embed.description = f'–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å –º—å—é—Ç–∞: {mr}.'
            await ctx.send(embed=embed)
        else:
            if role >= ctx.guild.get_member(self.bot.user.id).top_role:
                await messages.err(ctx, "–†–æ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–µ –Ω–∏–∂–µ –º–æ–µ–π.", True)
            elif role.managed:
                await messages.err(ctx, "–†–æ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π. –Ø –Ω–µ —Å–º–æ–≥—É –≤—ã–¥–∞–≤–∞—Ç—å –µ—ë.", True)
            else:
                cache.configs.add(ctx.guild.id, {'muterole': role.id})
                embed = disnake.Embed(color=Color.success)
                embed.title = '‚úÖ | –ì–æ—Ç–æ–≤–æ'
                embed.description = f'–†–æ–ª—å {role.mention} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –º—å—é—Ç-—Ä–æ–ª—å.'
                await ctx.send(embed=embed)
                for i in ctx.guild.text_channels:
                    await i.set_permissions(role, send_messages=False, add_reactions=False)
                for i in ctx.guild.voice_channels:
                    await i.set_permissions(role, speak=False)

    @commands.command()
    @commands.cooldown(1, 10, commands.BucketType.guild)
    async def nuker(self, ctx, punishment, t="0s"):
        measures.add(what=10)
        if messages.is_admin(ctx.author):
            punishments = {
                'none': '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
                'kick': '–ö–∏–∫',
                'ban': '–ë–∞–Ω'
            }
            if punishment.lower() in list(punishments) or punishment.lower() == 'show':
                try:
                    p = cache.configs_data[ctx.guild.id]['nuker-type']
                    ti = cache.configs_data[ctx.guild.id]['nuker-time']
                except:
                    p, ti = 'none', 0
                n = {'nuker-type': 'none', 'nuker-time': 0}
                if punishment.lower() == 'show':
                    if ti > 0:
                        await ctx.send(
                            f'‚ö† –ù–∞–∫–∞–∑–∞–Ω–∏–µ –¥–ª—è –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –∫—Ä–∞—à-–±–æ—Ç–∞: **{punishments[p]}** –Ω–∞ **{word.hms2(ti)}**.')
                    else:
                        await ctx.send(f'‚ö† –ù–∞–∫–∞–∑–∞–Ω–∏–µ –¥–ª—è –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –∫—Ä–∞—à-–±–æ—Ç–∞: **{punishments[p]}**.')
                elif punishment.lower() == 'kick':
                    if word.string_to_seconds(t) == 0:
                        n['nuker-type'] = 'kick'
                        await ctx.send('‚úÖ –¢–µ–ø–µ—Ä—å –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –∫—Ä–∞—à-–±–æ—Ç–∞ –∂–¥—ë—Ç **–∫–∏–∫**.')
                    else:
                        await ctx.send('‚ùå –ö–∏–∫ –Ω–µ –∏–º–µ–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏.')
                elif punishment.lower() == 'ban':
                    n['nuker-type'] = 'ban'
                    n['nuker-time'] = word.string_to_seconds(t)
                    if word.string_to_seconds(t) > 0:
                        blob = f' –Ω–∞ **{word.hms2(word.string_to_seconds(t))}**'
                    else:
                        blob = ''
                    await ctx.send(f'‚úÖ –¢–µ–ø–µ—Ä—å –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –∫—Ä–∞—à-–±–æ—Ç–∞ –∂–¥—ë—Ç **–±–∞–Ω**{blob}.')
                elif punishment.lower() == 'none':
                    if word.string_to_seconds(t) == 0:
                        n['nuker-type'] = 'none'
                        await ctx.send('‚úÖ –¢–µ–ø–µ—Ä—å –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –∫—Ä–∞—à-–±–æ—Ç–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –∂–¥—ë—Ç.')
                    else:
                        await ctx.send('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è –Ω–µ –∏–º–µ–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏.')
            else:
                await ctx.send('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è.')
            cache.configs.add(ctx.guild.id, n)
        else:
            await messages.only_admin(ctx)

    @commands.command(aliases=['rp', 'pr', 'protectrole', 'roleprotect', 'role-protect'])
    @commands.cooldown(1, 10, commands.BucketType.guild)
    async def role_protect(self, ctx, option=None):
        measures.add(what=10)
        if messages.is_admin(ctx.author):
            if ctx.guild.id not in cache.configs_data:
                rp = 0
            else:
                data = cache.configs_data[ctx.guild.id]
                if 'roleprotect' not in data:
                    rp = 0
                else:
                    rp = data['roleprotect']
            if option is None:
                embed = disnake.Embed(title="üõ° | –ó–∞—â–∏—Ç–∞ —Ä–æ–ª–µ–π")
                if rp == 0:
                    embed.color = Color.danger
                    embed.description = "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞—â–∏—Ç—ã: **–û—Ç–∫–ª—é—á–µ–Ω–∞**."
                else:
                    embed.color = Color.success
                    embed.description = "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞—â–∏—Ç—ã: **–í–∫–ª—é—á–µ–Ω–∞**."
                await ctx.send(embed=embed)
            else:
                option = option.lower()
                if option == 'on':
                    if rp == 0:
                        rp = 75
                        cache.configs.add(ctx.guild.id, {"roleprotect": rp})
                        embed = disnake.Embed(color=Color.success)
                        embed.title = "‚úÖ | –ì–æ—Ç–æ–≤–æ"
                        embed.description = "–ó–∞—â–∏—Ç–∞ —Ä–æ–ª–µ–π –±—ã–ª–∞ –≤–∫–ª—é—á–µ–Ω–∞."
                        await ctx.send(embed=embed)
                    else:
                        await messages.err(ctx, "–ó–∞—â–∏—Ç–∞ —Ä–æ–ª–µ–π —É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞.")
                elif option == 'off':
                    if rp == 75:
                        if ctx.guild.id in cache.configs_data:
                            rp = 0
                            cache.configs.add(ctx.guild.id, {"roleprotect": rp})
                            embed = disnake.Embed(color=Color.success)
                            embed.title = "‚úÖ | –ì–æ—Ç–æ–≤–æ"
                            embed.description = "–ó–∞—â–∏—Ç–∞ —Ä–æ–ª–µ–π –±—ã–ª–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞."
                            await ctx.send(embed=embed)
                    else:
                        await messages.err(ctx, "–ó–∞—â–∏—Ç–∞ —Ä–æ–ª–µ–π —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω–∞.")
                else:
                    await messages.err(ctx, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è.", True)
        else:
            await messages.only_admin(ctx)

    @commands.group(aliases=['wa', 'warnactions', 'warn-actions'])
    @commands.check(messages.check_perms)
    @commands.cooldown(1, 5, commands.BucketType.guild)
    async def warn_actions(self, ctx):
        measures.add(what=10)
        if ctx.invoked_subcommand is None:
            wa = {}
            try:
                wa = cache.warns_data[ctx.guild.id]['actions']
            except:
                pass
            p = ctx.prefix
            embed = disnake.Embed(color=Color.primary)
            embed.title = "‚ö† | –ù–∞–∫–∞–∑–∞–Ω–∏—è –∑–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"
            embed.description = f'''
`<–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä>` `[–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä]`
**–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫–æ–±–æ—á–∫–∏ –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤**

`{p}warn_actions set <‚Ññ –ø—Ä–µ–¥—É–ø—Ä-—è> <none | mute | kick | ban> [–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å]` ‚Äì –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ
`{p}warn_actions reset` ‚Äì –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è
            '''
            if wa != {}:
                w, a = [], []
                actions = {
                    'none': '‚ùå –ù–∏—á–µ–≥–æ',
                    'mute': 'üîá –ú—å—é—Ç',
                    'kick': 'üë¢ –ö–∏–∫',
                    'ban': 'üî® –ë–∞–Ω'
                }
                for action in wa:
                    ac = wa[action]
                    w.append(f'`{action}` ‚ö†')
                    if ac['duration'] > 0:
                        a.append(f"{actions[ac['punishment']]} –Ω–∞ {word.hms2(float(ac['duration']))}")
                    else:
                        a.append(f"{actions[ac['punishment']]}")
                str_w = '\n'.join(w)
                str_p = '\n'.join(a)
                embed.add_field(name='–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:', value=str_w)
                embed.add_field(name='–ù–∞–∫–∞–∑–∞–Ω–∏—è:', value=str_p)
            await ctx.send(embed=embed)

    @warn_actions.command()
    async def set(self, ctx, warn: int, punishment, duration="0s"):
        punishment = punishment.lower()
        available_actions = ['none', 'mute', 'kick', 'ban']
        converted = word.string_to_seconds(duration)
        if punishment not in available_actions:
            await messages.err(ctx, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π: `none`, `mute`, `kick` –∏–ª–∏ `ban`.',
                               True)
        elif warn < 1:
            await messages.err(ctx, '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ `1`.', True)
        else:
            if ctx.guild.id not in cache.warns_data:
                w = {"case": 1, "actions": {}, "members": {}}
                cache.warns.add(ctx.guild.id, w)
            else:
                w = cache.warns_data[ctx.guild.id]
            # print(w)
            if "case" not in w:
                w = {"case": 1, "members": {}, "actions": {}}
            if "actions" not in w:
                w['actions'] = {}
            if punishment not in ['none', 'kick'] or converted <= 0:
                pass
            else:
                converted = 0
            w['actions'][str(warn)] = {'punishment': punishment, 'duration': converted}
            cache.warns.add(ctx.guild.id, w)
            embed = disnake.Embed(color=Color.success)
            embed.title = "‚úÖ | –ì–æ—Ç–æ–≤–æ"
            embed.description = "–ù–∞–∫–∞–∑–∞–Ω–∏–µ –±—ã–ª–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ."
            await ctx.send(embed=embed)

    @warn_actions.command()
    async def reset(self, ctx):
        if ctx.guild.id not in cache.warns_data:
            await messages.err(ctx, '–ù–∞–∫–∞–∑–∞–Ω–∏–π –Ω–µ—Ç.', True)
        else:
            w = cache.warns_data[ctx.guild.id]
            # print(w)
            if 'actions' in w:
                cache.warns.delete(ctx.guild.id, {'actions': True})
                embed = disnake.Embed(color=Color.success)
                embed.title = "‚úÖ | –ì–æ—Ç–æ–≤–æ"
                embed.description = "–ù–∞–∫–∞–∑–∞–Ω–∏—è –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã."
                await ctx.send(embed=embed)
            else:
                await messages.err(ctx, '–ù–∞–∫–∞–∑–∞–Ω–∏–π –Ω–µ—Ç.', True)

    @commands.command(aliases=['ar'])
    @commands.check(messages.check_perms)
    @commands.cooldown(1, 3, commands.BucketType.guild)
    async def antiraid(self, ctx, joins: int = None, interval=None):
        measures.add(what=10)
        if joins is not None and interval is not None:
            t = word.string_to_seconds(interval)
            if joins < 0:
                await messages.err(ctx, "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞—Ö–æ–¥–æ–≤ ‚Äì **1**.")
            elif t < 0:
                await messages.err(ctx, "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –∑–∞—Ö–æ–¥–æ–≤ ‚Äì **1 —Å–µ–∫—É–Ω–¥–∞**.")
            else:
                if joins == 0 and t == 0:
                    turn = 0
                else:
                    turn = 1
                cache.antiraid.add(ctx.guild.id, {"joins": joins, "interval": t, "turn": turn})
                embed = disnake.Embed(color=Color.success, title="‚úÖ | –ì–æ—Ç–æ–≤–æ")
                if turn == 0:
                    embed.description = '–ó–∞—â–∏—Ç–∞ –æ—Ç —Ä–µ–π–¥–æ–≤ –±—ã–ª–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞.'
                else:
                    embed.description = f'–¢–µ–ø–µ—Ä—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –º–æ–∂–Ω–æ –∑–∞–π—Ç–∏ –º–∞–∫—Å–∏–º—É–º {joins} ' \
                                        f'{word.word_correct(joins, "—Ä–∞–∑", "—Ä–∞–∑–∞", "—Ä–∞–∑")} –∑–∞ {word.hms(float(t))}' \
                                        f'.\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É –æ—Ç —Ä–µ–π–¥–æ–≤, –Ω–∞–ø–∏—à–∏—Ç–µ `{ctx.prefix}' \
                                        f'antiraid 0 0`. '
                await ctx.send(embed=embed)
        else:
            try:
                ar = cache.antiraid_data[ctx.guild.id]
                turn = ar['turn']
                j = ar['joins']
                i = ar['interval']
            except:
                turn, j, i = 0, 0, 0

            embed = disnake.Embed(title="‚úã | –ó–∞—â–∏—Ç–∞ –æ—Ç —Ä–µ–π–¥–æ–≤", color=Color.primary)
            if turn == 0:
                embed.description = "–ó–∞—â–∏—Ç–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞."
            else:
                embed.description = f'–ù–∞ —Å–µ—Ä–≤–µ—Ä –º–æ–∂–Ω–æ –∑–∞–π—Ç–∏ –º–∞–∫—Å–∏–º—É–º {j} {word.word_correct(j, "—Ä–∞–∑", "—Ä–∞–∑–∞", "—Ä–∞–∑")}' \
                                    f' –∑–∞ {word.hms(float(i))}.\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É –æ—Ç —Ä–µ–π–¥–æ–≤, –Ω–∞–ø–∏—à–∏—Ç–µ ' \
                                    f'`{ctx.prefix}antiraid 0 0`.'
            await ctx.send(embed=embed)

    @commands.group()
    @commands.has_permissions(administrator=True)
    @commands.check(messages.check_perms)
    @commands.cooldown(1, 5, commands.BucketType.guild)
    async def perms(self, ctx):
        if not messages.is_admin(ctx.author):
            return await messages.only_admin(ctx)
        if ctx.invoked_subcommand is None:
            await ctx.send(f"–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –∫–æ–º–∞–Ω–¥–µ, –Ω–∞–ø–∏—à–∏—Ç–µ `{ctx.prefix}help perms`.")

    @perms.command()
    async def ar(self, ctx, cmd, *, r):
        global result
        if cmd == "*":
            pass
        else:
            cmd = messages.get_command(self.bot, cmd)
            if not cmd:
                return await messages.err(ctx, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        try:
            alr = cache.perms_data[ctx.guild.id][cmd]["roles"]["allowed"]
        except:
            alr = []

        try:
            der = cache.perms_data[ctx.guild.id][cmd]["roles"]["denied"]
        except:
            der = []

        try:
            cc = cache.perms_data[ctx.guild.id][cmd]["channels"]
        except:
            cc = {}

        r = r.strip("<@&>").replace(">", "").replace("<", "").replace("@", "").replace("&", "")
        if not r.lower() in ["–Ω–µ—Ç", "no", "none"]:
            for i in r.split():
                if ctx.guild.get_role(int(i)):
                    if int(i) in der:
                        der.pop(der.index(int(i)))
                    if not int(i) in alr:
                        alr.append(int(i))
            result = '\n'.join([ctx.guild.get_role(int(a)).mention for a in
                                r.strip("<@&>").replace(">", "").replace("<", "").replace("@", "").replace("&",
                                                                                                           "").split()
                                if ctx.guild.get_role(int(a))])
        else:
            alr = []

        cache.perms.add(ctx.guild.id, {cmd: {"roles": {"allowed": alr, "denied": der}, "channels": cc}})
        embed = disnake.Embed(title="‚úÖ | –ì–æ—Ç–æ–≤–æ", color=Color.success)
        if cmd == "*":
            if r.lower() in ["–Ω–µ—Ç", "no", "none"]:
                embed.description = "–í—ã —É–±—Ä–∞–ª–∏ –≤—Å–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥"
            else:
                embed.description = f"–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥: \n>>> {result}"
        else:
            if r.lower() in ["–Ω–µ—Ç", "no", "none"]:
                embed.description = f"–í—ã —É–±—Ä–∞–ª–∏ –≤—Å–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{ctx.prefix}{cmd}`."
            else:
                embed.description = f"–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{ctx.prefix}{cmd}`: \n>>> {result}"
        await ctx.send(embed=embed)

    @perms.command()
    async def dr(self, ctx, cmd, *, r):
        global result
        if messages.is_admin(ctx.author):
            if cmd != "*":
                cmd = messages.get_command(self.bot, cmd)
                if not cmd:
                    return await messages.err(ctx, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            try:
                alr = cache.perms_data[ctx.guild.id][cmd]["roles"]["allowed"]
            except:
                alr = []

            try:
                der = cache.perms_data[ctx.guild.id][cmd]["roles"]["denied"]
            except:
                der = []

            try:
                cc = cache.perms_data[ctx.guild.id][cmd]["channels"]
            except:
                cc = {}

            r = r.strip("<@&>").replace(">", "").replace("<", "").replace("@", "").replace("&", "")
            if not r.lower() in ["–Ω–µ—Ç", "no", "none"]:
                for i in r.split():
                    if ctx.guild.get_role(int(i)):
                        if int(i) in alr:
                            alr.pop(alr.index(int(i)))
                        if not int(i) in der:
                            der.append(int(i))
                result = '\n'.join([ctx.guild.get_role(int(a)).mention for a in
                                    r.strip("<@&>").replace(">", "").replace("<", "").replace("@", "").replace("&",
                                                                                                               "").split()
                                    if ctx.guild.get_role(int(a))])
            else:
                der = []

            cache.perms.add(ctx.guild.id, {cmd: {"roles": {"allowed": alr, "denied": der}, "channels": cc}})
            embed = disnake.Embed(title="‚úÖ | –ì–æ—Ç–æ–≤–æ", color=Color.success)
            if cmd == "*":
                if r.lower() in ["–Ω–µ—Ç", "no", "none"]:
                    embed.description = "–í—ã —É–±—Ä–∞–ª–∏ –≤—Å–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥"
                else:
                    embed.description = f"–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥: \n>>> {result}"
            else:
                if r.lower() in ["–Ω–µ—Ç", "no", "none"]:
                    embed.description = f"–í—ã —É–±—Ä–∞–ª–∏ –≤—Å–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{ctx.prefix}{cmd}`."
                else:
                    embed.description = f"–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{ctx.prefix}{cmd}`: \n>>> {result}"
            await ctx.send(embed=embed)
            return
        return await messages.only_admin(ctx)

    @perms.command()
    async def ac(self, ctx, cmd, *, r):
        global result
        if messages.is_admin(ctx.author):
            if cmd == "*":
                pass
            else:
                cmd = messages.get_command(self.bot, cmd)
                if not cmd:
                    return await messages.err(ctx, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            try:
                alr = cache.perms_data[ctx.guild.id][cmd]["channels"]["allowed"]
            except:
                alr = []

            try:
                der = cache.perms_data[ctx.guild.id][cmd]["channels"]["denied"]
            except:
                der = []

            try:
                cc = cache.perms_data[ctx.guild.id][cmd]["roles"]
            except:
                cc = {}

            r = r.strip("<@#>").replace(">", "").replace("<", "").replace("@", "").replace("#", "")
            if not r.lower() in ["–Ω–µ—Ç", "no", "none"]:
                for i in r.split():
                    if ctx.guild.get_channel(int(i)):
                        if int(i) in der:
                            der.pop(der.index(int(i)))
                        if not int(i) in alr:
                            alr.append(int(i))
                result = '\n'.join([ctx.guild.get_channel(int(a)).mention for a in
                                    r.strip("<@#>").replace(">", "").replace("<", "").replace("@", "").replace("#",
                                                                                                               "").split()
                                    if ctx.guild.get_channel(int(a))])
            else:
                alr = []

            cache.perms.add(ctx.guild.id, {cmd: {"channels": {"allowed": alr, "denied": der}, "roles": cc}})
            embed = disnake.Embed(title="‚úÖ | –ì–æ—Ç–æ–≤–æ", color=Color.success)
            if cmd == "*":
                if r.lower() in ["–Ω–µ—Ç", "no", "none"]:
                    embed.description = "–í—ã —É–±—Ä–∞–ª–∏ –≤—Å–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥"
                else:
                    embed.description = f"–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥: \n>>> {result}"
            else:
                if r.lower() in ["–Ω–µ—Ç", "no", "none"]:
                    embed.description = f"–í—ã —É–±—Ä–∞–ª–∏ –≤—Å–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{ctx.prefix}{cmd}`."
                else:
                    embed.description = f"–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{ctx.prefix}{cmd}" \
                                        f"`: \n>>> {result}"
            await ctx.send(embed=embed)
            return
        return await messages.only_admin(ctx)

    @perms.command()
    async def dc(self, ctx, cmd, *, r):
        if messages.is_admin(ctx.author):
            if cmd == "*":
                pass
            else:
                cmd = messages.get_command(self.bot, cmd)
                if not cmd:
                    return await messages.err(ctx, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            try:
                alr = cache.perms_data[ctx.guild.id][cmd]["channels"]["allowed"]
            except:
                alr = []

            try:
                der = cache.perms_data[ctx.guild.id][cmd]["channels"]["denied"]
            except:
                der = []

            try:
                cc = cache.perms_data[ctx.guild.id][cmd]["roles"]
            except:
                cc = {}

            r = r.strip("<@#>").replace(">", "").replace("<", "").replace("@", "").replace("#", "")
            if not r.lower() in ["–Ω–µ—Ç", "no", "none"]:
                for i in r.split():
                    if ctx.guild.get_channel(int(i)):
                        if int(i) in alr:
                            alr.pop(alr.index(int(i)))
                        if not int(i) in der:
                            der.append(int(i))
                result = '\n'.join([ctx.guild.get_channel(int(a)).mention for a in
                                    r.strip("<@#>").replace(">", "").replace("<", "").replace("@", "").replace("#",
                                                                                                               "").split()
                                    if ctx.guild.get_channel(int(a))])
            else:
                der = []

            cache.perms.add(ctx.guild.id, {cmd: {"channels": {"allowed": alr, "denied": der}, "roles": cc}})
            embed = disnake.Embed(title="‚úÖ | –ì–æ—Ç–æ–≤–æ", color=Color.success)
            if cmd == "*":
                if r.lower() in ["–Ω–µ—Ç", "no", "none"]:
                    embed.description = "–í—ã —É–±—Ä–∞–ª–∏ –≤—Å–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥"
                else:
                    embed.description = f"–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥: \n>>> {result}"
            else:
                if r.lower() in ["–Ω–µ—Ç", "no", "none"]:
                    embed.description = f"–í—ã —É–±—Ä–∞–ª–∏ –≤—Å–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{ctx.prefix}{cmd}`."
                else:
                    embed.description = f"–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{ctx.prefix}{cmd}`: \n>>> {result}"
            await ctx.send(embed=embed)
            return
        return await messages.only_admin(ctx)

    @perms.command()
    async def show(self, ctx, cmd):
        if not messages.is_admin(ctx.author):
            return await messages.only_admin(ctx)
        if cmd != "*":
            cmd = messages.get_command(self.bot, cmd)
            if not cmd:
                return await messages.err(ctx, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        try:
            alr = cache.perms_data[ctx.guild.id][cmd]["roles"]["allowed"]
        except:
            alr = []

        try:
            der = cache.perms_data[ctx.guild.id][cmd]["roles"]["denied"]
        except:
            der = []

        try:
            alc = cache.perms_data[ctx.guild.id][cmd]["channels"]["allowed"]
        except:
            alc = []

        try:
            dlc = cache.perms_data[ctx.guild.id][cmd]["channels"]["denied"]
        except:
            dlc = []

        alr = [a for a in alr if ctx.guild.get_role(a)]
        der = [a for a in der if ctx.guild.get_role(a)]

        alc = [a for a in alc if ctx.guild.get_channel(a)]
        dlc = [a for a in dlc if ctx.guild.get_channel(a)]

        embed = disnake.Embed(color=Color.primary)
        if cmd != "*":
            embed.title = f"üëÆ‚Äç‚ôÇÔ∏è | –ü—Ä–∞–≤–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{ctx.prefix}{cmd}`"
        else:
            embed.title = "üëÆ‚Äç‚ôÇÔ∏è | –ü—Ä–∞–≤–∞ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥"
        if alr == [] and der == [] and alc == [] and dlc == []:
            embed.description = "–í—Å—ë –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –Ω–∏–∫—Ç–æ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–ª —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."
        else:
            if len(alr) == 0:
                alr = "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
            else:
                alr = '\n'.join([ctx.guild.get_role(a).mention for a in alr])

            if len(der) == 0:
                der = "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
            else:
                der = '\n'.join([ctx.guild.get_role(a).mention for a in der])

            if len(alc) == 0:
                alc = "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
            else:
                alc = '\n'.join([ctx.guild.get_channel(a).mention for a in alc])

            if len(dlc) == 0:
                dlc = "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
            else:
                dlc = '\n'.join([ctx.guild.get_channel(a).mention for a in dlc])

            embed.add_field(inline=False, name="–†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏", value=f">>> {alr}")
            embed.add_field(inline=False, name="–ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏", value=f">>> {der}")
            embed.add_field(inline=False, name="–†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã", value=f">>> {alc}")
            embed.add_field(inline=False, name="–ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã", value=f">>> {dlc}")

        await ctx.send(embed=embed)

    @commands.command(aliases=['ndm', 'notify-dm'])
    @commands.check(messages.check_perms)
    @commands.cooldown(1, 10, commands.BucketType.guild)
    async def notify_dm(self, ctx, option=None):
        if option:
            option = option.lower()

        try:
            curopt = cache.configs_data[ctx.guild.id]["notify-dm"]
        except KeyError:
            curopt = False

        embed = disnake.Embed(title="üì£ | –û–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –Ω–∞–∫–∞–∑–∞–Ω–∏—è—Ö –≤ –ª–∏—á–∫—É", color=Color.primary)
        if not option:
            embed.description = f"–Ø {messages.rebool(curopt, '–æ–ø–æ–≤–µ—â–∞—é', '–Ω–µ –æ–ø–æ–≤–µ—â–∞—é')} –æ –Ω–∞–∫–∞–∑–∞–Ω–∏—è—Ö."
            return await ctx.send(embed=embed)

        if option == "on":
            cache.configs.add(ctx.guild.id, {"notify-dm": True})
            embed.title = "‚úÖ | –ì–æ—Ç–æ–≤–æ"
            embed.color = Color.success
            embed.description = "–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ–ø–æ–≤–µ—â–∞—Ç—å –æ –Ω–∞–∫–∞–∑–∞–Ω–∏—è—Ö –≤ –ª–∏—á–∫—É."
            return await ctx.send(embed=embed)
        if option == "off":
            cache.configs.add(ctx.guild.id, {"notify-dm": False})
            embed.title = "‚úÖ | –ì–æ—Ç–æ–≤–æ"
            embed.color = Color.success
            embed.description = "–¢–µ–ø–µ—Ä—å —è –Ω–µ –±—É–¥—É –æ–ø–æ–≤–µ—â–∞—Ç—å –æ –Ω–∞–∫–∞–∑–∞–Ω–∏—è—Ö –≤ –ª–∏—á–∫—É."
            return await ctx.send(embed=embed)
        return await messages.err(ctx, "–û–ø—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

    @commands.command()
    @commands.check(messages.check_perms)
    @commands.cooldown(1, 5, commands.BucketType.guild)
    async def score(self, ctx, option=None, amount: int = None):
        if not option:
            sc = messages.default_scores

            if ctx.guild.id in cache.antinuke_data:
                for i in list(messages.default_scores):
                    if i in cache.antinuke_data[ctx.guild.id]:
                        sc[i] = cache.antinuke_data[ctx.guild.id][i]

            try:
                max = cache.configs_data[ctx.guild.id]["maxscore"]
            except:
                max = 20

            embed = disnake.Embed(title="üéöÔ∏è | –ë–∞–ª–ª—ã –∑–∞ –∫—Ä–∞—à")
            embed.description = f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `{ctx.prefix}help score`, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –æ –∫–æ–º–∞–Ω–¥–µ."
            embed.color = Color.primary

            embed.add_field(inline=False, name="–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è (–±–∞–ª–ª—ã)", value=f"""
**–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤:** {sc['channel_delete']}
**–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π:** {sc['role_delete']}
**–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤:** {sc['channel_create']}
**–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π:** {sc['role_create']}
**–ë–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {sc['ban']}

**–ú–∞–∫—Å–∏–º—É–º:** {max}
            """)
            return await ctx.send(embed=embed)
        elif option.lower() == "help":
            embed = disnake.Embed(title="‚ùî | –°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º")
            embed.description = """
`channel_create` ‚Äì —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤
`channel_delete` ‚Äì —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤
`role_create` ‚Äì —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π
`role_delete` ‚Äì —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π
`ban` ‚Äì –±–∞–Ω
`max` ‚Äì –º–∞–∫—Å–∏–º—É–º (–ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤–∫–ª—é—á–∞–µ—Ç—Å—è –∞–Ω—Ç–∏-–∫—Ä–∞—à)
            """
            embed.color = Color.primary
            return await ctx.send(embed=embed)

        if not amount:
            return await messages.err(ctx, "–í–∞–º —Å–ª–µ–¥—É–µ—Ç —É–∫–∞–∑–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ.")
        if option.lower() == "max":
            if amount < 10:
                return await messages.err(ctx, "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 10.")
            if amount > 200:
                return await messages.err(ctx, "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 200.")
            cache.configs.add(ctx.guild.id, {"maxscore": amount})
            embed = disnake.Embed()
            embed.title = "‚úÖ | –ì–æ—Ç–æ–≤–æ"
            embed.color = Color.success
            embed.description = f"–¢–µ–ø–µ—Ä—å –∞–Ω—Ç–∏-–∫—Ä–∞—à –≤–∫–ª—é—á–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ø–æ—Ä–æ–≥–∞ –≤ **{amount} {word.word_correct(amount, '–±–∞–ª–ª', '–±–∞–ª–ª–∞', '–±–∞–ª–ª–æ–≤')}**."
            return await ctx.send(embed=embed)
        elif option.lower().replace("-", "_") in list(messages.default_scores):
            if amount < 0:
                return await messages.err(ctx, "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 0.")
            if amount > 50:
                return await messages.err(ctx, "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 50.")
            cache.antinuke.add(ctx.guild.id, {option.lower().replace("-", "_"): amount})
            embed = disnake.Embed()
            embed.title = "‚úÖ | –ì–æ—Ç–æ–≤–æ"
            embed.color = Color.success
            embed.description = f"–¢–µ–ø–µ—Ä—å –∑–∞ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –¥–∞—ë—Ç—Å—è **{amount} {word.word_correct(amount, '–±–∞–ª–ª', '–±–∞–ª–ª–∞', '–±–∞–ª–ª–æ–≤')}**."
            return await ctx.send(embed=embed)
        else:
            return await messages.err(ctx, "–§–∏–ª—å—Ç—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –°—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑?")


def setup(bot):
    bot.add_cog(Settings(bot))
